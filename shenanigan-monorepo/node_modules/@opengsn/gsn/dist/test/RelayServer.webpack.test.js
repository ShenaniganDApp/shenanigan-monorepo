"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const child_process_1 = __importDefault(require("child_process"));
const path_1 = __importDefault(require("path"));
const fs_1 = __importDefault(require("fs"));
describe('RelayServer-webpack', () => {
    let oneFileRelayer;
    before('create webpack', function () {
        this.timeout(15000);
        const jsrelayDir = path_1.default.join(__dirname, '..', 'jsrelay');
        fs_1.default.rmdirSync(path_1.default.join(jsrelayDir, 'dist'), { recursive: true });
        child_process_1.default.execSync('npx webpack', { cwd: jsrelayDir, stdio: 'inherit' });
        oneFileRelayer = path_1.default.join(jsrelayDir, 'dist', 'relayserver.js');
    });
    it('should launch (and instantly crash with some parameter missing) to verify it was packed correctly', function () {
        try {
            child_process_1.default.execSync('node ' + oneFileRelayer, { encoding: 'ascii', stdio: 'pipe' });
            assert.fail('should throw');
        }
        catch (e) {
            assert.match(e.message.toString(), /Command failed.*[\r\n]+missing --/);
        }
    });
    it('should test it can actually work');
});
//# sourceMappingURL=RelayServer.webpack.test.js.map