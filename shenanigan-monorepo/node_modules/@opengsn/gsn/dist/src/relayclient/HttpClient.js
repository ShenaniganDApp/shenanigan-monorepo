"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class HttpClient {
    constructor(httpWrapper, config) {
        this.httpWrapper = httpWrapper;
        this.config = config;
    }
    async getPingResponse(relayUrl) {
        const pingResponse = await this.httpWrapper.sendPromise(relayUrl + '/getaddr', {});
        if (this.config.verbose) {
            console.log('error, body', pingResponse);
        }
        if (pingResponse == null) {
            throw new Error('Relay responded without a body');
        }
        return pingResponse;
    }
    async relayTransaction(relayUrl, request) {
        const { signedTx, error } = await this.httpWrapper.sendPromise(relayUrl + '/relay', request);
        if (this.config.verbose) {
            console.log('relayTransaction response:', signedTx, error);
        }
        if (error != null) {
            throw new Error(`Got error response from relay: ${error}`);
        }
        if (signedTx == null) {
            throw new Error('body.signedTx field missing.');
        }
        return signedTx;
    }
}
exports.default = HttpClient;
//# sourceMappingURL=HttpClient.js.map