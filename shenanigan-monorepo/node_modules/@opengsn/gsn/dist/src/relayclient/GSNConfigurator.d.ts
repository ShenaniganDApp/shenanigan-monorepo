import { HttpProvider } from 'web3-core';
import { Address, AsyncDataCallback, AsyncScoreCalculator, IntString, PingFilter, RelayFilter } from './types/Aliases';
import HttpClient from './HttpClient';
import ContractInteractor from './ContractInteractor';
import { IKnownRelaysManager } from './KnownRelaysManager';
import AccountManager from './AccountManager';
import RelayedTransactionValidator from './RelayedTransactionValidator';
/**
 * All classes in GSN must be configured correctly with non-null values.
 * Yet it is tedious to provide default values to all configuration fields on new instance creation.
 * This helper allows users to provide only the overrides and the remainder of values will be set automatically.
 */
export declare function configureGSN(partialConfig: Partial<GSNConfig>): GSNConfig;
/**
 * @field methodSuffix - allows use of versioned methods, i.e. 'eth_signTypedData_v4'. Should be '_v4' for Metamask
 * @field jsonStringifyRequest - should be 'true' for Metamask, false for ganache
 */
export interface GSNConfig {
    preferredRelays: string[];
    relayLookupWindowBlocks: number;
    methodSuffix: string;
    jsonStringifyRequest: boolean;
    relayTimeoutGrace: number;
    sliceSize: number;
    verbose: boolean;
    gasPriceFactorPercent: number;
    minGasPrice: number;
    maxRelayNonceGap: number;
    relayHubAddress: Address;
    stakeManagerAddress: Address;
    paymasterAddress: Address;
    forwarderAddress: Address;
    chainId: number;
    clientId: IntString;
}
export interface GSNDependencies {
    httpClient: HttpClient;
    contractInteractor: ContractInteractor;
    knownRelaysManager: IKnownRelaysManager;
    accountManager: AccountManager;
    transactionValidator: RelayedTransactionValidator;
    pingFilter: PingFilter;
    relayFilter: RelayFilter;
    asyncApprovalData: AsyncDataCallback;
    asyncPaymasterData: AsyncDataCallback;
    scoreCalculator: AsyncScoreCalculator;
    config: GSNConfig;
}
export declare function getDependencies(config: GSNConfig, provider?: HttpProvider, overrideDependencies?: Partial<GSNDependencies>): GSNDependencies;
