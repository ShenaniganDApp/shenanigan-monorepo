import { DeploymentResult } from '../cli/CommandsLogic';
import { HttpServer } from '../relayserver/HttpServer';
import { Address } from './types/Aliases';
import { RelayProvider } from './RelayProvider';
export interface TestEnvironment {
    deploymentResult: DeploymentResult;
    relayProvider: RelayProvider;
    httpServer: HttpServer;
    relayUrl: string;
}
declare class GsnTestEnvironmentClass {
    private httpServer?;
    /**
     *
     * @param host:
     * @param deployPaymaster - whether to deploy the naive paymaster instance for tests
     * @param debug
     * @return
     */
    startGsn(host?: string, deployPaymaster?: boolean, debug?: boolean): Promise<TestEnvironment>;
    /**
     * initialize a local relay
     * @private
     */
    private _resolveAvailablePort;
    stopGsn(): Promise<void>;
    _runServer(host: string, deploymentResult: DeploymentResult, from: Address, relayUrl: string, port: number, debug?: boolean): void;
}
export declare const GsnTestEnvironment: GsnTestEnvironmentClass;
export {};
