"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const ethers_1 = require("ethers");
// This class is an extension of buidler-ethers' wrapper.
// TODO: Export buidler-ether's wrapper so this can be implemented like a normal
//  subclass.
class WaffleMockProviderAdapter extends ethers_1.providers.JsonRpcProvider {
    constructor(_buidlerNetwork) {
        super();
        this._buidlerNetwork = _buidlerNetwork;
    }
    getWallets() {
        if (this._buidlerNetwork.name !== "buidlerevm") {
            throw new Error(`This method only works with Buidler EVM.
You can use \`await bre.ethers.signers()\` in other networks.`);
        }
        return this._buidlerNetwork.config.accounts.map((acc) => new ethers_1.Wallet(acc.privateKey, this));
    }
    createEmptyWallet() {
        return ethers_1.Wallet.createRandom().connect(this);
    }
    // Copied from buidler-ethers
    async send(method, params) {
        const result = await this._buidlerNetwork.provider.send(method, params);
        // We replicate ethers' behavior.
        this.emit("debug", {
            action: "send",
            request: {
                id: 42,
                jsonrpc: "2.0",
                method,
                params,
            },
            response: result,
            provider: this,
        });
        return result;
    }
}
exports.WaffleMockProviderAdapter = WaffleMockProviderAdapter;
//# sourceMappingURL=waffle-provider-adapter.js.map