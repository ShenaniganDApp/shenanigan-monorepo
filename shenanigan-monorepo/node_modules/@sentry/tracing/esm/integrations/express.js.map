{"version":3,"file":"express.js","sourceRoot":"","sources":["../../src/integrations/express.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { Integration, Transaction } from '@sentry/types';\nimport { logger } from '@sentry/utils';\n\n// Have to manually set types because we are using package-alias\ninterface Application {\n  use(...args: any): any;\n}\n\ntype ErrorRequestHandler = (...args: any) => any;\ntype RequestHandler = (...args: any) => any;\ntype NextFunction = (...args: any) => any;\n\ninterface Response {\n  once(name: string, callback: () => void): void;\n}\n\n/**\n * Internal helper for `__sentry_transaction`\n * @hidden\n */\ninterface SentryTracingResponse {\n  __sentry_transaction?: Transaction;\n}\n\n/**\n * Express integration\n *\n * Provides an request and error handler for Express framework\n * as well as tracing capabilities\n */\nexport class Express implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'Express';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = Express.id;\n\n  /**\n   * Express App instance\n   */\n  private readonly _app?: Application;\n\n  /**\n   * @inheritDoc\n   */\n  public constructor(options: { app?: Application } = {}) {\n    this._app = options.app;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(): void {\n    if (!this._app) {\n      logger.error('ExpressIntegration is missing an Express instance');\n      return;\n    }\n    instrumentMiddlewares(this._app);\n  }\n}\n\n/**\n * Wraps original middleware function in a tracing call, which stores the info about the call as a span,\n * and finishes it once the middleware is done invoking.\n *\n * Express middlewares have 3 various forms, thus we have to take care of all of them:\n * // sync\n * app.use(function (req, res) { ... })\n * // async\n * app.use(function (req, res, next) { ... })\n * // error handler\n * app.use(function (err, req, res, next) { ... })\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction wrap(fn: Function): RequestHandler | ErrorRequestHandler {\n  const arrity = fn.length;\n\n  switch (arrity) {\n    case 2: {\n      return function(this: NodeJS.Global, _req: Request, res: Response & SentryTracingResponse): any {\n        const transaction = res.__sentry_transaction;\n        if (transaction) {\n          const span = transaction.startChild({\n            description: fn.name,\n            op: 'middleware',\n          });\n          res.once('finish', () => {\n            span.finish();\n          });\n        }\n        // eslint-disable-next-line prefer-rest-params\n        return fn.apply(this, arguments);\n      };\n    }\n    case 3: {\n      return function(\n        this: NodeJS.Global,\n        req: Request,\n        res: Response & SentryTracingResponse,\n        next: NextFunction,\n      ): any {\n        const transaction = res.__sentry_transaction;\n        const span =\n          transaction &&\n          transaction.startChild({\n            description: fn.name,\n            op: 'middleware',\n          });\n        fn.call(this, req, res, function(this: NodeJS.Global): any {\n          if (span) {\n            span.finish();\n          }\n          // eslint-disable-next-line prefer-rest-params\n          return next.apply(this, arguments);\n        });\n      };\n    }\n    case 4: {\n      return function(\n        this: NodeJS.Global,\n        err: any,\n        req: Request,\n        res: Response & SentryTracingResponse,\n        next: NextFunction,\n      ): any {\n        const transaction = res.__sentry_transaction;\n        const span =\n          transaction &&\n          transaction.startChild({\n            description: fn.name,\n            op: 'middleware',\n          });\n        fn.call(this, err, req, res, function(this: NodeJS.Global): any {\n          if (span) {\n            span.finish();\n          }\n          // eslint-disable-next-line prefer-rest-params\n          return next.apply(this, arguments);\n        });\n      };\n    }\n    default: {\n      throw new Error(`Express middleware takes 2-4 arguments. Got: ${arrity}`);\n    }\n  }\n}\n\n/**\n * Takes all the function arguments passed to the original `app.use` call\n * and wraps every function, as well as array of functions with a call to our `wrap` method.\n * We have to take care of the arrays as well as iterate over all of the arguments,\n * as `app.use` can accept middlewares in few various forms.\n *\n * app.use([<path>], <fn>)\n * app.use([<path>], <fn>, ...<fn>)\n * app.use([<path>], ...<fn>[])\n */\nfunction wrapUseArgs(args: IArguments): unknown[] {\n  return Array.from(args).map((arg: unknown) => {\n    if (typeof arg === 'function') {\n      return wrap(arg);\n    }\n\n    if (Array.isArray(arg)) {\n      return arg.map((a: unknown) => {\n        if (typeof a === 'function') {\n          return wrap(a);\n        }\n        return a;\n      });\n    }\n\n    return arg;\n  });\n}\n\n/**\n * Patches original app.use to utilize our tracing functionality\n */\nfunction instrumentMiddlewares(app: Application): Application {\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  const originalAppUse = app.use;\n  app.use = function(): any {\n    // eslint-disable-next-line prefer-rest-params\n    return originalAppUse.apply(this, wrapUseArgs(arguments));\n  };\n  return app;\n}\n"]}